{"version":3,"sources":["webpack:///./src/components/TodoForm.js","webpack:///./src/pages/add.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/Menu.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TodoForm","props","addTodo","useContext","TodosContext","_useState","useState","title","setTitle","_useState2","description","setDescription","react_default","a","createElement","noValidate","autoComplete","Container","maxWidth","Grid","container","spacing","item","xs","TextField","required","id","name","label","value","onChange","e","target","margin","fullWidth","style","display","justifyContent","marginTop","Button","variant","size","color","onClick","preventDefault","navigate","Create","marginRight","fontSize","__webpack_exports__","layout","seo","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","SEO","_ref","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","components_Menu","_React$useState","anchorEl","setAnchorEl","Fragment","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","esm_Menu","Menu","keepMounted","open","Boolean","onClose","gatsby_browser_entry","to","MenuItem","Header","siteTitle","AppBar","position","marginLeft","Toolbar","minHeight","headerHeight","Typography","Layout","children","_856328897","header","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-add-js-3a38585388f28528c22d.js","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { navigate } from 'gatsby'\nimport { TodosContext } from '../context/TodosContext'\nimport {\n  TextField,\n  Button,\n  Container,\n  Grid,\n} from '@material-ui/core'\nimport {\n  Create as CreateIcon\n} from '@material-ui/icons'\n\nexport default (props) => {\n  const context = useContext(TodosContext)\n  const { addTodo } = context\n\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n\n  const updateTitle = e => setTitle(e.target.value)\n  const updateDescription = e => setDescription(e.target.value)\n  const add = e => {\n    e.preventDefault()\n    addTodo({ title, description })\n    navigate('/')\n  }\n\n  return (\n    <form noValidate autoComplete=\"off\">\n      <Container maxWidth=\"md\">\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              value={title}\n              onChange={updateTitle}\n              margin=\"normal\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"description\"\n              name=\"description\"\n              label=\"Description\"\n              value={description}\n              onChange={updateDescription}\n              margin=\"normal\"\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          marginTop: '3vh',\n        }}>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            onClick={add}\n          >\n            <CreateIcon style={{\n              marginRight: '1vh',\n              fontSize: '20px',\n            }} />\n            Add\n          </Button>\n        </div>\n      </Container>\n    </form>\n  )\n}\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport TodoForm from '../components/TodoForm'\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <SEO title=\"Add todo\" />\r\n    <TodoForm />\r\n  </Layout>\r\n)\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `viewport`,\r\n          content: `minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no`,\r\n        }\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport {\n  Menu,\n  MenuItem,\n  IconButton,\n} from '@material-ui/core'\nimport {\n  Menu as MenuIcon,\n} from '@material-ui/icons'\n\nexport default () => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <IconButton\n        edge=\"start\"\n        aria-label=\"home\"\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MenuIcon style={{ color: '#fff' }} />\n      </IconButton>\n      <Menu\n        id=\"menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Link to=\"/\">\n          <MenuItem>Pending</MenuItem>\n        </Link>\n        <Link to=\"/completed\">\n          <MenuItem>Completed</MenuItem>\n        </Link>\n        <Link to=\"/add\">\n          <MenuItem>Add</MenuItem>\n        </Link>\n      </Menu>\n    </>\n  )\n}","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core'\r\n\r\nimport Menu from './Menu'\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  const headerHeight = 70\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{\r\n          position: 'fixed',\r\n          marginLeft: '-8px', // to remove margin 8px on body\r\n          marginTop: '-8px', // to remove margin 8px on body\r\n        }}\r\n      >\r\n        <Toolbar style={{\r\n          minHeight: `${headerHeight}px`,\r\n        }}>\r\n          <Menu />\r\n          <Link to=\"/\" >\r\n            <Typography variant=\"h6\">{siteTitle}</Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div style={{\r\n          minHeight: `${headerHeight}px`,\r\n      }} />\r\n    </>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport Header from \"./header\"\r\nimport '../styles/index.scss'\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <Grid container spacing={3}>\r\n        {/* Main content section */}\r\n        <Grid item xs={12}>\r\n          {children}\r\n        </Grid>\r\n        {/* Footer section */}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}